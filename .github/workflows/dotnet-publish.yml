name: Build, Test, and Create Release

# Run on every push to any branch, AND on pull requests to 'main'
on:
  push:
    branches: [ "master" ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ "master" ]

jobs:
  # This job just builds and tests on every commit
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore Morpeh.BoilerplateGenerationProcessor.sln

      - name: Build
        run: dotnet build Morpeh.BoilerplateGenerationProcessor.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test Morpeh.BoilerplateGenerationProcessor.Tests/Morpeh.BoilerplateGenerationProcessor.Tests.csproj --configuration Release --no-build

  # This job runs ONLY when you push a new tag starting with 'v'
  create-release:
    # This job only runs if the 'build-and-test' job succeeded
    needs: [build-and-test]
    # Run only on pushing a tag like "v1.0.0"
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    permissions:
      contents: write # Needed to create the release
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore Morpeh.BoilerplateGenerationProcessor.sln

      - name: Build
        run: dotnet build Morpeh.BoilerplateGenerationProcessor.sln --configuration Release --no-restore

      - name: Create Zip Archive
        # This zips all the necessary DLLs from the build output folder
        run: |
          cd Morpeh.BoilerplateGenerationProcessor/bin/Release/netstandard2.0/
          zip -r Morpeh.Boilerplate.SourceGenerator.zip .
          cd ../../../../..

      - name: Create GitHub Release
        # This popular action creates a release and uploads the zip file
        uses: softprops/action-gh-release@v1
        with:
          # This uses the tag name (e.g., "v1.0.0") as the release name
          name: Release ${{ github.ref_name }}
          # This attaches the zip file we just created
          files: Morpeh.BoilerplateGenerationProcessor/bin/Release/netstandard2.0/Morpeh.Boilerplate.SourceGenerator.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}