name: Build, Test, and Create Release

# Run on every push to any branch, AND on pull requests to 'main'
on:
  push:
    branches: [ "master" ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore Morpeh.BoilerplateGenerationProcessor.sln

      - name: Build
        run: dotnet build Morpeh.BoilerplateGenerationProcessor.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test Morpeh.BoilerplateGenerationProcessor.Tests/Morpeh.BoilerplateGenerationProcessor.Tests.csproj --configuration Release --no-build
      
      # We only pack and zip on a 'push' event (to 'main' or a tag), not on pull requests
      - name: Create Artifacts Directory
        if: github.event_name == 'push'
        run: |
          mkdir -p ./artifacts/nupkg
          mkdir -p ./artifacts/zip

      - name: Pack NuGet Package
        if: github.event_name == 'push'
        run: dotnet pack Morpeh.BoilerplateGenerationProcessor/Morpeh.BoilerplateGenerationProcessor.csproj --configuration Release --no-build -o ./artifacts/nupkg

      - name: Create Zip Archive
        if: github.event_name == 'push'
        run: |
          cd Morpeh.BoilerplateGenerationProcessor/bin/Release/netstandard2.0/
          zip -r ../../../../artifacts/zip/Morpeh.Boilerplate.SourceGenerator.zip .
        shell: bash

      # Upload both artifacts for the release job
      - name: Upload Artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            ./artifacts/nupkg/*.nupkg
            ./artifacts/zip/*.zip

  create-release:
    # This job now just downloads artifacts and creates the release
    needs: [build-and-test]
    # Run only on pushing a tag like "v1.0.0"
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    permissions:
      contents: write # Needed to create the release
    
    steps:
      # We don't need to checkout or build anything
      - name: Download all release assets
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: ./release-assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          # This uses the tag name (e.g., "v1.0.0") as the release name
          name: Release ${{ github.ref_name }}
          # This attaches all files (zip and nupkg) from the download path
          files: ./release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}