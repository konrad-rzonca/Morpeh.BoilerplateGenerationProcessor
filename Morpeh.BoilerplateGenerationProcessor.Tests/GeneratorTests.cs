using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.CodeAnalysis.CSharp.Testing;
using Microsoft.CodeAnalysis.Testing;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Morpeh.BoilerplateGenerationProcessor.Tests;

[TestClass]
public class GeneratorTests
{
    private const string Stubs = @"
namespace Unity.IL2CPP.CompilerServices
{
    using System;

    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)]
    public sealed class Il2CppEagerStaticClassConstructionAttribute : Attribute {}
}

namespace Scellecs.Morpeh
{
    using System;

    public interface IComponent {}
    public interface ISystem {}
    public sealed class Filter {}
    public sealed class World {}
}
";

    // --------------------------------------------------------------------
    //  Helper for running generator tests
    // --------------------------------------------------------------------
    private static async Task RunGeneratorTestAsync(
        string source,
        string? expectedGeneratedSource = null,
        IEnumerable<DiagnosticResult>? expectedDiagnostics = null)
    {
        var test = new CSharpSourceGeneratorTest<
            AttributeGenerator,
            DefaultVerifier>
        {
            TestState =
            {
                // Put the actual test source first so it's always Test0.cs
                Sources = { source, Stubs },
                ReferenceAssemblies = ReferenceAssemblies.Net.Net60
            }
        };

        if (expectedGeneratedSource is not null)
            test.TestState.GeneratedSources.Add((
                typeof(AttributeGenerator),
                "Generated_AttributeGenerator.g.cs",
                expectedGeneratedSource));

        if (expectedDiagnostics is not null) test.TestState.ExpectedDiagnostics.AddRange(expectedDiagnostics);

        await test.RunAsync();
    }

    // --------------------------------------------------------------------
    //  TESTS
    // --------------------------------------------------------------------

    [TestMethod]
    public async Task ComponentMissingPartial_ShouldGenerateWarning()
    {
        var source = @"
using Scellecs.Morpeh;

namespace Game
{
    public struct MyComponent : IComponent
    {
        public int Value;
    }
}";

        DiagnosticResult expectedDiagnostic = DiagnosticResult
            .CompilerWarning("MORPEH001")
            .WithSpan("Test0.cs", 5, 19, 5, 31)
            .WithArguments("MyComponent");

        await RunGeneratorTestAsync(source, expectedDiagnostics: new[] { expectedDiagnostic });
    }

    [TestMethod]
    public async Task PartialComponent_ShouldGenerateAttribute()
    {
        var source = @"
using Scellecs.Morpeh;

namespace Game
{
    public partial struct MyComponent : IComponent
    {
        public int Value;
    }
}";

        var expectedGenerated = @"
// <auto-generated />
#pragma warning disable
namespace Game
{
    [global::Unity.IL2CPP.CompilerServices.Il2CppEagerStaticClassConstruction]
    public partial struct MyComponent {}
}
#pragma warning restore
";

        await RunGeneratorTestAsync(source, expectedGenerated);
    }

    [TestMethod]
    public async Task EmptyInput_ShouldNotProduceOutput()
    {
        const string source = "";

        await RunGeneratorTestAsync(source);
    }

    [TestMethod]
    public async Task SystemWithoutPartial_ShouldGenerateWarning()
    {
        var source = @"
using Scellecs.Morpeh;

namespace Game
{
    public class MySystem : ISystem
    {
    }
}";

        DiagnosticResult expectedDiagnostic = DiagnosticResult
            .CompilerWarning("MORPEH001")
            .WithSpan("Test0.cs", 5, 18, 5, 26)
            .WithArguments("MySystem");

        await RunGeneratorTestAsync(source, expectedDiagnostics: new[] { expectedDiagnostic });
    }

    [TestMethod]
    public async Task PartialSystem_ShouldGenerateAttribute()
    {
        var source = @"
using Scellecs.Morpeh;

namespace Game
{
    public partial class MySystem : ISystem
    {
    }
}";

        var expectedGenerated = @"
// <auto-generated />
#pragma warning disable
namespace Game
{
    [global::Unity.IL2CPP.CompilerServices.Il2CppEagerStaticClassConstruction]
    public partial class MySystem {}
}
#pragma warning restore
";

        await RunGeneratorTestAsync(source, expectedGenerated);
    }
}